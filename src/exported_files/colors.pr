import 'package:flutter/widgets.dart';

{[ const dsPrefix = dsPrefix(ds.currentDesignSystemVersion()) /]}
class {{dsPrefix}}Colors {
  final String name;
  final Color value;
  const {{dsPrefix}}Colors._(this.name, this.value);
{[ const colorTokensTree = ds.tokenGroupTreeByType("Color") /]}
{[ let collectedTokenNames = arrayCreate() /]}
{[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
  {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
  {[ for colorToken in colorTokenInGroups ]}
  {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, colorToken.name) /]}
  {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
  {[ if (colorToken.description && colorToken.description !== "") ]}
{{ createDocumentationComment(colorToken.description, "  ") }}
  {[/]}
  static const {{ fullTokenName }} = {[ inject "export_color_value" context colorToken.value /]}; 
  {[/]}
  {[ for colorToken in colorTokenInGroups ]}
  {[ const fullTokenPath = arrayConcat(fullTokenGroupPath, colorToken.name) /]}
  {[ const fullTokenName = arrayJoin(fullTokenPath, " ").camelcased(false) /]}
  {[ collectedTokenNames = arrayPush(collectedTokenNames, fullTokenName) /]}
  {[/]}
{[/]}

  static const values = <{{dsPrefix}}Colors>[
{[ for fullTokenName in collectedTokenNames ]}
    {{dsPrefix}}Colors._("{{ fullTokenName }}", {{ fullTokenName }}), 
{[/]}
  ];
}

